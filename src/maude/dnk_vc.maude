---- Copyright (c) 2021 University of Konstanz
---- 
---- Permission is hereby granted, free of charge, to any person obtaining a copy
---- of this software and associated documentation files (the "Software"), to deal
---- in the Software without restriction, including without limitation the rights
---- to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
---- copies of the Software, and to permit persons to whom the Software is
---- furnished to do so, subject to the following conditions:
---- 
---- The above copyright notice and this permission notice shall be included in all
---- copies or substantial portions of the Software.
---- 
---- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
---- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
---- FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
---- AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
---- LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
---- OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
---- SOFTWARE.

fmod COMM is
	protecting STRING .
	sorts Comm Channel .

	op _?_ : Channel String -> Comm .
	op _!_ : Channel String -> Comm .
endfm

view Comm from TRIV to COMM is
	sort Elt to Comm .
endv

fmod DNA is
	protecting COMM .
	protecting TRUTH-VALUE .
	protecting SET {Comm} * (sort Set {Comm} to TermSet) .

	sorts DNA Recursive RecursiveVC UnguardedTerm DNA_VC .
  subsort Recursive < DNA .
	subsort RecursiveVC < UnguardedTerm < DNA_VC .

	op _o+_ : DNA DNA -> DNA [ctor comm assoc metadata "nondeterministic choice" prec 43] .
	op _;_ : String DNA -> DNA [ctor metadata "sequential composition" prec 40 gather (E e)] .
	op _;_ : Comm DNA -> DNA [ctor metadata "sequential composition" prec 40 gather (E e)] .

	op bot : -> DNA .
	op rcfg(_,_) : Channel String -> Comm .
	op delta{_}(_) : TermSet DNA -> DNA . 
	op pi{_}(_) : Nat DNA -> DNA .

	var H : TermSet . 
	var M : Nat .
	var X : Channel .
	vars P Q R : DNA .
	vars N Z : String .

	op zero : -> String .

	eq zero ; P = bot .

	eq [A0] : (N + Z) ; R = N ; R o+ Z ; R .
	---A1: added comm to _o+_
	---A2: added assoc to _o+_
	eq [A3] : (P o+ P) = P .
	eq [A4] : (P o+ bot) = P .
endfm

view DNA from TRIV to DNA is
  sort Elt to DNA .
endv

view DNA_VC from TRIV to DNA is
  sort Elt to DNA_VC .
endv
